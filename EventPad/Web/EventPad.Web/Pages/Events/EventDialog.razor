@using EventPad.Web.Pages.Events
@using EventPad.Web.Pages.Users



@inherits MudComponentBase

@inject IUserService userService
@inject IEventService eventService



<MudDialog>
    <DialogContent>
        <MudForm Model="Model" @ref="form">
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="Name" @bind-Value="Model.Name"
                                  For="@(() => Model.Name)"
                                  Required="true"
                                  RequiredError="Name is required!">
                    </MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField Label="Description"
                                  Lines="5"
                                  For="@(() => Model.Description)"
                                  @bind-Value="Model.Description">
                    </MudTextField>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="Price" @bind-Value="Model.Price"
                                  For="@(() => Model.Price)"
                                  Required="true"
                                  RequiredError="Price is required!">
                    </MudTextField>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="Address" @bind-Value="Model.Address"
                                  For="@(() => Model.Address)"
                                  Required="true"
                                  RequiredError="Address is required!">
                    </MudTextField>
                </MudItem>
                <MudItem>
                    <MudSelect T="string" Label="Type" AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem Value="@("Single")" />
                        <MudSelectItem Value="@("Multiple")" />
                    </MudSelect>
                </MudItem>
                <MudFileUpload T="IBrowserFile" FilesChanged="HandleFileUploaded">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   for="@context.Id">
                            Avatar
                        </MudButton>
                    </ButtonTemplate>
                    <SelectedTemplate>
                        @if (context != null)
                        {
                            <MudText>@context.Name</MudText>
                        }
                        else
                        {
                            <MudText>No File</MudText>
                        }
                    </SelectedTemplate>
                </MudFileUpload>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] 
    MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter]
    public Guid? EventId { get; set; }

    [Parameter] 
    public EventModel Model { get; set; } = new();

    [Parameter]
    public IBrowserFile file { get; set; }

    private MudForm form = default!;



    protected override async Task OnInitializedAsync()
    {

        if (EventId != null)
        {
            var model = await eventService.GetEvent(EventId.Value);

            Model.Id = model.Id;
            Model.Name = model.Name;
            Model.Description = model.Description;
            Model.Price = model.Price;
            Model.Address = model.Address;
            Model.Type = model.Type;
            Model.Rating = model.Rating;
            Model.AdminId = model.AdminId;
            Model.AdminName = model.AdminName;
        }
    }


    async Task Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    void Cancel() => MudDialog.Cancel();


    private void HandleFileUploaded(IBrowserFile file)
    {
        this.file = file;
    }
}