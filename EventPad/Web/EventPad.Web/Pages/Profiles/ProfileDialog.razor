@inject IProfileService ProfileService

@inherits MudComponentBase


<MudDialog>
    <DialogContent>
        <MudForm Model="Model" @ref="form">
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="FirstName" @bind-Value="Model.FirstName"
                                  For="@(() => Model.FirstName)"
                                  Required="true"
                                  RequiredError="FirstName is required!">
                    </MudTextField>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField Label="SecondName" @bind-Value="Model.SecondName"
                                  For="@(() => Model.SecondName)"
                                  Required="true"
                                  RequiredError="SecondName is required!">
                    </MudTextField>
                </MudItem>
                <MudFileUpload T="IBrowserFile" FilesChanged="HandleFileUploaded">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   for="@context.Id">
                            Avatar
                        </MudButton>
                    </ButtonTemplate>
                    <SelectedTemplate>
                        @if (context != null)
                        {
                            <MudText>@context.Name</MudText>
                        }
                        else
                        {
                            <MudText>No File</MudText>
                        }
                    </SelectedTemplate>
                </MudFileUpload>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>



@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter]
    public Guid? UserId { get; set; }

    [Parameter]
    public ProfileModel Model { get; set; } = new();

    [Parameter]
    public IBrowserFile file { get; set; }

    private MudForm form = default!;



    protected override async Task OnInitializedAsync()
    {

        if (UserId != null)
        {
            var model = await ProfileService.Me();

            Model.Id = model.Id;
            Model.FirstName = model.FirstName;
            Model.SecondName = model.SecondName;
            Model.AccountNumber = model.AccountNumber;
            Model.Balance = model.Balance;
            Model.Rating = model.Rating;
            Model.Role = model.Role;
            Model.Email = model.Email;
            Model.Image = model.Image;
        }
    }


    async Task Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    void Cancel() => MudDialog.Cancel();


    private void HandleFileUploaded(IBrowserFile file)
    {
        this.file = file;
    }
}

