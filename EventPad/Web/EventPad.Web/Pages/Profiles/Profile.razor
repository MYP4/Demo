@page "/profile"

@using EventPad.Web.Components
@using EventPad.Web.Pages.Events
@using EventPad.Web.Pages.Profiles
@using Microsoft.AspNetCore.Authorization


@inject IEventService eventService
@inject IProfileService profileService
@inject IEventService EventService
@inject ISnackbar Snackbar
@inject IDialogService DialogService

@attribute [Authorize]
@layout MainLayout

<PageTitle>Profile</PageTitle>

<MudContainer>
    <MudGrid>
        <MudItem xs="12" sm="12" md="12" lg="12" xl="12">
            <MudCard Elevation="2" Outlined="true">
                <MudCardContent>
                    <MudGrid>
                        <!-- Аватар слева и больше -->
                        <MudItem xs="12" sm="12" md="12" lg="12" xl="12">
                            <MudAvatar Src="path_to_your_avatar_image" Size="Size.Large" />
                        </MudItem>
                        <MudItem xs="12" sm="12" md="12" lg="12" xl="12">
                            <!-- Информация о пользователе -->
                            <MudText Typo="Typo.h5" Class="mb-2">@profileModel.FirstName @profileModel.SecondName</MudText>
                            <MudText Typo="Typo.body2" Class="mb-2">Email: @profileModel.Email</MudText>
                            <MudText Typo="Typo.body2" Class="mb-2">Account Number: @profileModel.AccountNumber</MudText>
                            <MudText Typo="Typo.body2" Class="mb-2">Balance: @profileModel.Balance</MudText>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
                <MudCardActions>
                    <!-- Кнопки действий -->
                    <MudButton Color="Color.Primary" Variant="Variant.Text" OnClick="EditProfile">Edit Profile</MudButton>
                    <MudButton Color="Color.Secondary" Variant="Variant.Text" OnClick="DeleteProfile">Delete Profile</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

<UserEvents></UserEvents>



@code {
    private ProfileModel profileModel;

    private async Task ReloadData()
    {
        profileModel = await profileService.Me();
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await ReloadData();
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
    }

    private void EditProfile()
    {

    }

    private void DeleteProfile()
    {

    }
}
